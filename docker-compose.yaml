services:
    mysql:
        image: mysql:latest
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
            - dev
        volumes:
            - mysql:/var/lib/mysql

    pgsql:
        image: postgres:latest
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "5432:5432"
        networks:
            - dev
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - pgsql:/var/lib/postgresql/data

    redis:
        image: redis:latest
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "6379:6379"
        networks:
            - dev
        volumes:
            - redis:/data
        command: redis-server --appendonly yes
    
    mailpit:
        image: axllent/mailpit
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        volumes:
            - mailpit:/data
        ports:
            - "8025:8025"
            - "1025:1025"
        networks:
            - dev
        environment:
            MP_MAX_MESSAGES: 5000
            MP_DATABASE: /data/mailpit.db
            MP_SMTP_AUTH_ACCEPT_ANY: 1
            MP_SMTP_AUTH_ALLOW_INSECURE: 1

    elastic-search:
        image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
        restart: unless-stopped
        container_name: elastic-search
        mem_limit: '1g'
        ports:
            - "9200:9200"
        networks:
            - dev
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=true
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
        volumes:
            - elastic:/usr/share/elasticsearch/data

    jaeger:
        image: jaegertracing/jaeger:2.9.0
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "16686:16686"
            - "5778:5778"
            - "9411:9411"
        networks:
            - dev
        environment:
            ELASTIC_USERNAME: ${ELASTIC_USERNAME}
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
        volumes:
            - "./jaeger/config.yaml:/jaeger/config.yaml"
        command: [ "--config", "/jaeger/config.yaml" ]
        depends_on:
            - elastic-search
    
    otel-collector:
        image: otel/opentelemetry-collector-contrib
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        volumes:
            - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
        ports:
            - "1888:1888" # pprof extension
            - "8888:8888" # Prometheus metrics exposed by the Collector
            - "8889:8889" # Prometheus exporter metrics
            - "13133:13133" # health_check extension
            - "4317:4317" # OTLP gRPC receiver
            - "4318:4318" # OTLP http receiver
            - "55679:55679" # zpages extension
        networks:
            - dev
        depends_on:
            - redis
            - mailpit
            - elastic-search
            - jaeger

    kibana:
        image: docker.elastic.co/kibana/kibana:9.1.3
        container_name: kibana
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "5601:5601"
        volumes:
            - ./elasticsearch/kibana.yml:/usr/share/kibana/config/kibana.yml
        networks:
            - dev
        depends_on:
            - elastic-search

    filebeat:
        image: docker.elastic.co/beats/filebeat:9.1.3
        user: root
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        volumes:
            - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
            - filebeat:/usr/share/filebeat/data:rw
            - admin-store-log:/var/www/html/storage/logs
        command: filebeat -e --strict.perms=false
        environment:
            - output.elasticsearch.hosts=["elastic-search:9200"]
            - ELASTIC_USERNAME=${ELASTIC_USERNAME}
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
        depends_on:
            - elastic-search
        networks:
            - dev

    grafana:
        image: grafana/grafana-enterprise
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "3000:3000"
        networks:
            - dev
        volumes:
            - grafana-storage:/var/lib/grafana

    prometheus:
        image: prom/prometheus
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "9090:9090"
        networks:
            - dev
        volumes:
            - prometheus:/prometheus
            - ./prometheus.yml:/etc/prometheus/prometheus.yml

    mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        container_name: mssql
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        hostname: "mssql1"
        environment:
            ACCEPT_EULA: Y
            MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
        ports:
            - "1433:1433"
        networks:
            - default
        volumes:
            - mssql:/var/opt/mssql

    mongo-db:
        image: mongo
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "27017:27017"
        networks:
            - default
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        volumes:
            - mongoDB:/data/db
            - ./mongo:/etc/mongo
    
    mongo-express:
        image: mongo-express
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: '2g'
                reservations:
                    cpus: '1'
                    memory: '1g'
        ports:
            - "8081:8081"
        networks:
            - default
        environment:
            ME_CONFIG_MONGODB_URL: mongodb://root:secret@mongo-db:27017/
            ME_CONFIG_BASICAUTH_ENABLED: true
            ME_CONFIG_BASICAUTH_USERNAME: express
            ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
        depends_on:
            - mongo-db

volumes:
    mysql:
        driver: local
    pgsql:
        driver: local
    mailpit:
        driver: local
    minio:
        driver: local
    redis:
        driver: local
    grafana-storage:
        driver: local
    prometheus:
        driver: local
    mssql:
        driver: local
    mongoDB:
        driver: local
    elastic:
        driver: local
    filebeat:
        driver: local
    admin-store-log:
        external: true
networks:
    default:
        driver: bridge
    dev:
        external: true
